
Topic 2.7 <i class="icon-docs"></i>

----------

**Table of Contents <i class="icon-sitemap"></i>**

[TOC]

----------

# Paths

In this topic we'll be discussing absolute and relative paths and their differences. While this may seem superfluous to those of you who are computer-savvy, brushing up on this topic couldn't hurt.    

## Absolute Paths ##
An absolute, or full, path begins with a drive letter followed by a colon, such as `C:\`.    

## Relative Paths ##
A relative path refers to a location that is relative to a current directory. Relative paths make use of two special symbols, a dot (`.`) and a double-dot (`..`), which translate into the current directory and the parent directory. Double dots are used for moving up in the hierarchy. A single dot represents the current directory itself.   

Using the example folder structure that is listed below, let us assume you used the *Windows File Explorer* to navigate to the following directory: `E:\PortableApps\AffinityPhotoPortable\App`. After navigating to this directory, a relative path will use this folder as the *current working directory* (until you navigate to a new directory, at which point the new folder becomes the current working directory). The root directory is also referred to as the current working directory (or `cwd` for short).   

    E:\
      - Documents\
      + PortableApps\
        + AffinityPhotoPortable\
          + App\
            - AppInfo\
            - AffinityPhoto\
            - DefaultData\
          - Data\
          + Other\
            + Help\
              - Images\
            - Source\

If you wanted to navigate to the Data directory from the the current working directory (`cwd` is equal to *App*), you could type the following in the *Windows Explorer* address bar:   

    ..\Data  

After you hit the *Enter* key on your keyboard, the *Windows File Explorer* would then navigate to `E:\PortableApps\AffinityPhotoPortable\Data`. Here are a few more examples using the above directory tree structure with `E:\PortableApps\AffinityPhotoPortable\Data` as the `cwd` for your better understanding:   

    ..              = \PortableApps\AffinityPhotoPortable
    ..\..           = \PortableApps
    ..\..\Documents = \PortableApps\Documents
    .               = \PortableApps\AffinityPhoto\Data
    .\..\Other      = \PortableApps\AffinityPhoto\Other  


> **Note:** A relative path cannot span disk drives. For example, if your current working directory was on drive `E:\`, you cannot use relative paths to navigate to any directory that was on the `C:\` drive.   

### Relative vs. Absolute Paths
As far as absolute paths are concerned:   

 - You can move a document or a `PAF` directory anywhere on your computer and the data will be found when you reopen the document or `PAF`.
 - On most personal computers, the location of data is usually constant and doesn't change much. You typically don't move your data around; with that, absolute paths are preferred.
 - You can reference data on other disk drives without problem.

Using relative paths, these adjustments are necessary:

 - When moving `DefaultData` to `Data`, you must also move the files within those folders and retain the structure therein.
 - When packaging a well-developed `PAF`, using the aforementioned directory structure from *AffinityPhotoPortable*. The structure must remain intact regardless if *AffinityPhotoPortable* was executed in the `E:\PortableApps\AffinityPhotoPortable` folder or executed from inside the  `E:\AffinityPhotoProtable` directory.

## UNC Paths
`UNC` stands for *Universal* (or *Uniform* or *Unified*) *Naming Convention* and is a syntax for accessing files and folders on a network of computers. The syntax is as follows:

    \\<computer name>\<shared folder>\

This can be followed by any number of directories and terminated with a directory or file name.

For example:

    \\demondevin\public\file.ext

The computer name is always preceded by a double backward slash (`\\`).

In `UNC`, the computer name is also known as the host name.

A few rules for `UNC` paths:

 - UNC paths cannot contain a drive letter (such as `E:\`).
 - You cannot navigate to directories above the shared directory.

How `UNC` pertains to `PAL` is the ability to keep folder structure even when launched from a network folder. There's not much you may do as far as using it in `PAL` but you can make sure that it really does support `UNC` paths correctly. Some applications (or their portability wrapper) may corrupt data when not specially designed to cope with `UNC` paths, because of this the launcher is set by default on [warning](http://portableapps.com/manuals/PortableApps.comLauncher/ref/launcher.ini/launch.html#supportsunc) the end-user that the application may not work correctly and the launcher is than given a chance to exit. More about `UNC` paths and PA.c Platform can be find [here](https://portableapps.com/support/platform#uncpath).