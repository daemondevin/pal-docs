
Topic 2.2 <i class="icon-docs"></i>

----------

**Table of Contents <i class="icon-sitemap"></i>**

[TOC]

----------

# PAF Advantages
## PAF Advantages
Utilizing software which is meant for portability is the ability to use a simple USB device. Not only does your system prosper from the use of portable applications, you have the ability to turn your USB stick, or any USB enabled device such as an iPod or Zune, into a PortableApp Suite. For example, [PortableApps.com Suite™](http://portableapps.com/suite) is a collection of portable applications such as a web browser, anti-virus, and more—all of which can be launched via an integrated menu configured for portability. When finished with the host computer—if the programs are properly made portable, then there shouldn't be any trace of your existence or your data left behind on the client's PC.<span class="tooltip"><sup class="tool-tip">?</sup><span class="tooltip-box">Well, to be precise, any tech-savvy System Administrator can find hints of your usage but nothing of what you did or was looking at.<span class="tooltip-arrow"></span></span></span>

Portable application suites like [PortableApps.com Suite™](http://portableapps.com/suite) and [LiberKey](http://www.liberkey.com/en/suites.html) have a huge community dedicated to the development of portable applications. Resources like [reboot.pro](http://reboot.pro/) or [VMware](http://www.vmware.com/) and [Oracle](https://www.oracle.com/index.html), give you the ability to completely transform your entire PC environment into a sophisticated set of portable, virtual, take-anywhere-you-need-to-go utility.

## Install Pitfalls

A common problem with most installed applications is it's completely dependent on the Windows registry file-system. Most applications rely on the host's PC which it was installed upon for it's Registry and for Windows PCs it's runtime redistributables. Typically, if the program's developer wrote an application in the traditional knowledge base, then as such the software's configuration and settings are fanned out in many folders hidden from the end-user.

All this hinders the ability to backup your applications settings/configuration from unforeseen mishaps such as "the blue screen of death" or hard drive corruption. So when you need to reinstall said program, or dare I say it, reinstall Windows itself, all your settings and your personal data are either lost or corrupt and you'd have to reinstall/reconfigure every application you had prior. Many software developers have you purchase their software; the ability to reuse these applications if you loose your licensings and/or data by having your laptop stolen, it is damn near impossible due to licensing issues leaving you to purchase their software again.

Besides the added perks of not having to install a program onto your computer and booting a virtual PC from anyone's computer anywhere, one does not experience performance degradation over time with portable programs. The idea of portable applications are that they've been designed to avoid getting threaded into any one particular PC. If properly wrapped (or virtualized) the application should have all it's configuration files and registry entries stored within it's launcher's directory or sub folder. The possibilities are seemingly limitless. So if you're constantly moving from one PC to the next, you can take your most beloved software and/or virtual system with you and access your content on any host PC. So let your inner-geek play around anywhere and everywhere with you're favourite software, made portable alongside a virtual machine.